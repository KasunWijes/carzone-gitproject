pip freeze// check gloabal environment installed packages
pip install --user virtualenv  //sudo access

python -m venv env //python virtual environment comeup with new vewrsion and it is just called
source env/Scripts/activate // activate the virula environment where no longer connection wit global environment packages

pip freeze //no packages installed listed in new virual directory

*******************
pip install django==3.0.7

************
django-admin startproject . //create carzone project file/create Django app, main folder + manage.py file

+++++++++++++++++++++++++++++++++++++++++++++++++
Start server on browser

//go to relevent project folder from bash

source env/Scripts/activate
python manage.py runserver //run the server amd local host browser


Search on browser: http://127.0.0.1:8000/

***********************
as soon as create an app , please add it under installed apps in settings.py

===================
catzone folder ,modification to project
pages folder , modification to rest default html page

======================
#push to github

git init #run on git bash after activated virtual env, git folder will create on Atom
git add -A #ADD ALL the files to git bash


=========================

git status           #only shows the changes in exiting folders,new files are not tracking
git add -A             # add all newly created files to gitHub
git commit -am "added new test file to pages folder"       #update the commit in gitHub
git push origin
git status                #now can show the changes of newly created file

==========================
git ignore files

contains the media files , pictures does not add to github since size is high. 

/media  #does not track by git status comd



===================================================================================

in Django , all css,image and js files/links are called as static files

1. Paste static file folder innside working project folder
2. Register the static files in settings.py to add the path route
3. Run manage.py collectstatic command to collect all static files from working dir and copy them the rest api folder(Rest api creating as similar folder it self according to working folder)


==============================
Do css , js and images href changes as =>> "{%static 'xx' %}"  //path reestablishing acccording to static folder

ctrl+f5  clear the cash memory on browser then load
======================================================
find below {% _________ %} are template tags.

creating abse.html file

{% extends 'base.html'%}

{% block content%}

{% load static %}

{% endblock %}

==========================

breaking html template into 3 parts
1.Top bar
2.Nav bar
3.Footer

inside base file

{% include 'includes/topbar.html' %}

{% include 'includes/navbar.html' %}

  <!-- main or home content start -->
{% block content%}

{% endblock %}
  <!-- main or home content end -->
  
{% include 'includes/footer.html' %}



==============================================================================================
if you need to add a navigation page to main page

1. update django app folder urls.py >> url patterns

path('about', views.about, name='about'),  #views.method name is about


2. Create method in views.py in django app folder

def about(request): #pass a request to the method
    return render(request, 'pages/about.html') #pass again request and about.html path to render method

3.Create a new file in template/app/about.html and update your html tags. 

noe you can route to the naviagtion page

========================================================================================

pages app.  What do you mean by app? 
example:

1. Account app for login and register
2. Pages app for navigation to pages

================================================
Key Terminology

1. Banner - header ekat yatin yana ribon eka
2. Bread Crumb- Banner eke tiyena nawatha home ekat yana button eka
3. Overlay = prompting the relevent widjet


=================================================

Connecting Postgresql to Django

successor of ingress relational database management system

after creating a database in postgre pgadmin app or local server
1. update Engine name,name,password and Host seiitings.py in Django
2. we only care about the database /schemas/tables only

=============================Setting up admin backend===========================

AFTER Create a superuser for Django admin the modal is creating.

1. makemigrations - since postgre dataase in only configured in settings.py , we need to migrate the project modals into db---- python manage.py makemigration ### this command look for any modal changes before migrate , #######(sometimes you may need install psycog2 package)
2. migrate  -- python manage.py migrate , send files to database
3. Create superuser once modal migrate to databse --------python manage.py createsupreuser
4. winpty python create superuser  (djangoadmin/email/pswd)
5. python manage.py runserver # can go to admin page of the website   128.0.0.1/adimin


==========================================================================

What is a Modal?
A model is the single, definitive source of information about your data.  each model maps to a single database table.


* Each model is a Python class
* Each filed/attribute of the model represents a database field/colomn name of table

Example: model defines a Person, which has a first_name and last_name:

from django.db import models


class Person(models.Model):
    first_name = models.CharField(max_length=30)
    last_name = models.CharField(max_length=30)

first_name and last_name are fields of the model. Each field is specified as a class attribute, and each attribute maps to a database column.

The above Person model would create a database table like this:

CREATE TABLE myapp_person (
    "id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "first_name" varchar(30) NOT NULL,
    "last_name" varchar(30) NOT NULL
);


=========================================================================================================

